<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>nars</groupId>
  <artifactId>core</artifactId>
  <version>1.6-SNAPSHOT</version>
  <packaging>jar</packaging>

  <url>http://code.google.com/p/open-nars</url>

  <name>${project.artifactId}</name>
  <description>The NARS project attempts to uniformly explain and reproduce many cognitive facilities, including reasoning, learning, planning, etc, so as to provide a unified theory, model, and system for AI as a whole.
What makes this system different from conventional reasoning systems is its ability to learn from its experience and to work with insufficient knowledge and resources. </description>
  <inceptionYear>2008</inceptionYear>
  <licenses>
    <license>
      <name>GNU General Public License (GPL)</name> 
      <url>http://www.gnu.org/licenses/lgpl.html</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <developers>
    <developer>
     <name>Pei Wang</name> 
     <id>NARS.Wang</id> 
    </developer>
    <developer>
     <name>Jean-Marc Vanel</name> 
     <id>jeanmarc.vanel</id> 
    </developer>
  </developers>

  <mailingLists>
    <mailingList>
      <name>NARS user mailing list</name>
      <subscribe>http://groups.google.com/group/open-nars</subscribe>
      <post>open-nars@googlegroups.com</post>
    </mailingList>
  </mailingLists>

  <scm>
    <developerConnection>scm:svn:https://open-nars.googlecode.com/svn/trunk</developerConnection>
              <connection>scm:svn:http://open-nars.googlecode.com/svn/trunk</connection>
    <url>https://code.google.com/p/open-nars/source/browse/#svn%2Ftrunk</url>
  </scm>

  <issueManagement>
    <system>GoogleCode</system>
    <url>https://code.google.com/p/open-nars/issues/list</url>
  </issueManagement>
 
  <properties>
    <maven.compiler.source>1.6</maven.compiler.source>
    <maven.compiler.target>1.5</maven.compiler.target>
    <encoding>UTF-8</encoding>
    <scala.version>2.10.0</scala.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>


  <build>
    <!--
    <sourceDirectory>src/main/scala</sourceDirectory>
    <testSourceDirectory>src/test/scala</testSourceDirectory>
-->
    <plugins>
      <plugin>
        <groupId>org.scala-tools</groupId>
        <artifactId>maven-scala-plugin</artifactId>
        <version>2.15.0</version>
        <executions>
		<!-- for calls possibly between Java and Scala in both directions -->
                    <execution>
                        <id>compile</id>
                        <goals>
                        <goal>compile</goal>
                        </goals>
                        <phase>compile</phase>
                    </execution>
                    <execution>
                        <id>test-compile</id>
                        <goals>
                        <goal>testCompile</goal>
                        </goals>
                        <phase>test-compile</phase>
                    </execution>
                    <execution>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                    </execution>
        </executions>
      </plugin>


      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.6</version>
        <configuration>
          <useFile>false</useFile>
          <disableXmlReport>true</disableXmlReport>
          <!-- If you have classpath issue like NoDefClassError,... -->
          <!-- useManifestOnlyJar>false</useManifestOnlyJar -->
          <includes>
            <include>**/*Test.*</include>
            <include>**/*Suite.*</include>
          </includes>
        </configuration>
      </plugin>
    </plugins>
  </build>


  <dependencies>
    <dependency>
      <groupId>org.scala-lang</groupId>
      <artifactId>scala-library</artifactId>
      <version>${scala.version}</version>
    </dependency>
    <!-- Test -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.8.1</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.scala-tools.testing</groupId>
      <!--artifactId>specs_${scala.version}</artifactId-->
      <artifactId>specs_2.10</artifactId>
    <version>1.6.9</version>
</dependency>

    <dependency>
      <groupId>org.scalatest</groupId>
      <artifactId>scalatest</artifactId>
      <version>1.2</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

</project>
